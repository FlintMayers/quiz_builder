{% extends 'base.html.twig' %}

{% block body %}
    <h3 class="text-center mt-5">Quiz builder</h3>
    {{ form_start(form) }}
    <div class="form-group">
        {{ form_row(form.title) }}
    </div>
    <h5>Questions</h5>
    <ul class="questions" data-prototype="{{ form_widget(form.questions.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for question in form.questions %}
            <li>{{ form_row(question.name) }}</li>
            {#<ul class="answers" data-prototype="{{ form_widget(form.answers.vars.prototype)|e('html_attr') }}">#}
                {#<li>answer</li>#}
            {#</ul>#}
        {% endfor %}
    </ul>
    {{ form_end(form) }}
{% endblock %}
{% block javascripts %}
    <script>
        var $collectionHolder;

        // setup an "add a tag" link
        var $addQuestionLink = $('<a href="#" class="add_question_link">Add a question</a>');
        var $newLinkLi = $('<li></li>').append($addQuestionLink);

        $(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.questions');

            $collectionHolder.find('li').each(function() {
                addQuestionFormDeleteLink($(this));
            });

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addQuestionLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                addQuestionForm($collectionHolder, $newLinkLi);
            });
        });

        function addQuestionForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
            addQuestionFormDeleteLink($newFormLi);
        }

        function addQuestionFormDeleteLink($questionFormLi) {
            var $removeFormA = $('<a href="#">delete this question</a>');
            $questionFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $questionFormLi.remove();
            });
        }
    </script>
{% endblock %}
